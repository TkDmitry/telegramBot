@startuml

title CrossPay: Схема взаимодействия клиента, бота, бэкенда и банков

actor Клиент
participant "Telegram Mini App" as Бот
participant "Backend (Flask)" as Бэкенд
participant "ЮKassa" as ЮKassa
participant "BaaS Provider (Европа)" as BaaS_Provider
participant "SimplChain" as SimplChain
participant "Банк-партнёр (Дубай)" as Банк_партнёр
participant "Европейский банк" as Европейский_банк

== Авторизация и открытие карты ==
Клиент -> Бот : Открывает Mini App
Бот -> Бэкенд : Отправляет initDataUnsafe
Бэкенд -> BaaS_Provider : Запрос на выпуск карты
BaaS_Provider -> Бэкенд : Карта выпущена
Бэкенд -> Бот : Подтверждение выпуска карты
Бот -> Клиент : Карта готова

== Указание суммы и выбор карты ==
Клиент -> Бот : Вводит сумму и выбирает карту
Бот -> Бэкенд : Запрос на конвертацию RUB → EUR
Бэкенд -> Бот : Возвращает сумму в EUR

== Покупка токенов через ЮKassa ==
Клиент -> Бот : Подтверждает оплату
Бот -> Бэкенд : Запрос на создание платежа
Бэкенд -> ЮKassa : Создание платежа (RUB)
ЮKassa -> Клиент : Редирект на форму оплаты
ЮKassa -> Бэкенд : Уведомление об успешной оплате

== Выпуск токенов и передача клиенту ==
Бэкенд -> SimplChain : Выпуск simpl_coin и transport_coin
SimplChain -> Бэкенд : Токены выпущены
Бэкенд -> Бот : Подтверждение
Бот -> Клиент : Токены зачислены на кошелёк

== Подтверждение перевода за границу ==
Клиент -> Бот : Подтверждает перевод simpl_coin
Бот -> Бэкенд : Запрос на трансграничную транзакцию
Бэкенд -> SimplChain : Списание simpl_coin и transport_coin
SimplChain -> Бэкенд : Токены списаны

== Перевод средств через банк-партнёр ==
Бэкенд -> Банк_партнёр : Запрос на перевод EUR
Банк_партнёр -> Европейский_банк : Зачисление на карту клиента
Европейский_банк -> Банк_партнёр : Подтверждение зачисления
Банк_партнёр -> Бэкенд : Средства зачислены

== Финализация и сжигание токенов ==
Бэкенд -> SimplChain : Сжигание simpl_coin
SimplChain -> Бэкенд : Токены уничтожены
Бэкенд -> Бот : Завершение операции
Бот -> Клиент : Перевод завершён

@enduml
